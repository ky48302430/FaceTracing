apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'armeabi-v7a'
                //因为opencv 需要依赖 gnustl_static
                // r18b的ndk gnustl_static被移除了，所以别用r18b
                arguments "-DANDROID_STL=gnustl_static"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
}

//sourceSets.
//    main { //这个配置是必须的，如果你的so文件放在了libs/armeabi/下，则下面srcDir = libs即可
//        jniLibs.srcDirs = ['src/main/jniLibs']
//    }

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])//记得添加依赖，一般默认的都会自动生成

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}



